stages:
  - test
  - build
  - deploy
  - build-production
  - deploy-production

# ------------------------------
# TESTING STAGE
# ------------------------------
test-awesome-project:
  stage: test
  before_script:
    - docker login --username $REGISTRY_USER --password $REGISTRY_PASSWORD $REGISTRY_URL
  script:
    - echo "Running tests for Awesome Project"
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'test'"

# ------------------------------
# BUILD IMAGE FOR TEST
# ------------------------------
build-awesome-project-image-test:
  stage: build
  before_script:
    - touch .env
    - cd ./app && touch .env && cd ..
    - docker login --username $REGISTRY_USER --password $REGISTRY_PASSWORD $REGISTRY_URL
  script:
    - export TAG=latest-cicd
    - echo "Building image with TAG $TAG"
    - sh publishProject.sh
  tags:
    - shell_executer
  after_script:
    - echo "Build is complete"
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'test'"

# ------------------------------
# DEPLOY TO TEST SERVER
# ------------------------------
deploy-awesome-project-test-server:
  stage: deploy
  script:
    - echo "Deploying to test server"
    - scp -i /home/ubuntu/.ssh/id_rsa -o StrictHostKeyChecking=no $ENV_FILE_TEST $TEST_SERVER_USER@$TEST_SERVER_IP:/home/ubuntu/projects/awesome-project/.env
    - ssh -i /home/ubuntu/.ssh/id_rsa -o StrictHostKeyChecking=no $TEST_SERVER_USER@$TEST_SERVER_IP "cd /home/ubuntu/projects/awesome-project && TAG=latest-cicd docker compose pull && TAG=latest-cicd docker compose down && TAG=latest-cicd docker compose up -d"
  tags:
    - shell_executer
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'test'"
      when: manual

# ------------------------------
# BUILD IMAGE FOR PRODUCTION
# ------------------------------
build-awesome-project-image-production:
  stage: build-production
  before_script:
    - touch .env
    - cd ./app && touch .env && cd ..
    - docker login --username $REGISTRY_USER --password $REGISTRY_PASSWORD $REGISTRY_URL
  environment:
    name: production
  script:
    - echo "Building production image"
    - sh publishProject.sh
  tags:
    - shell_executer
  after_script:
    - echo "Production build is complete"
  only:
    - /^v\d+\.\d+\.\d+$/

# ------------------------------
# DEPLOY TO PRODUCTION SERVER
# ------------------------------
deploy-awesome-project-production-server:
  stage: deploy-production
  script:
    - echo "Deploying to production server"
    - scp -i /home/gitlab-runner/.ssh/id_rsa -o StrictHostKeyChecking=no -P 22 $ENV_FILE_PROD $PROD_SERVER_USER@$PROD_SERVER_IP:/home/produser/projects/awesome-project/.env
    - ssh -i /home/gitlab-runner/.ssh/id_rsa -o StrictHostKeyChecking=no $PROD_SERVER_USER@$PROD_SERVER_IP -p 22 "cd /home/produser/projects/awesome-project && export TAG=$CI_COMMIT_TAG && docker compose pull && docker compose down && docker compose up -d"
  tags:
    - shell_executer
  environment:
    name: production
  variables:
    TAG_VER: $CI_COMMIT_TAG
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/'
      when: manual
